# import UserOrderByInput from './generated/prisma.graphql'

type Query {
    users(
        query: String
        first: Int
        skip: Int
        after: String
        orderBy: UserOrderByInput
    ): [User!]!
    user(id: ID!): User!
    me: User!
}

type Mutation {
    login: AuthPayload!
    deleteUser: User!
    createSong(data: CreateSongInput!): Song!
    addSongToQueue(songId: String!): QueueSong!
    deleteAllSongsInQueue: BatchPayload!
    deleteSongInQueue(queueId: String!): QueueSong!
    deleteSong(songId: String!): User!
    updateSong(data: UpdateSongInput!): User!
}

# type Subscription {
# }

type AuthPayload {
    token: String!
    user: User!
}

type BatchPayload {
    count: Long!
}

input CreateSongInput {
    name: String!
    artist: String!
}

input UpdateSongInput {
    songId: String!
    name: String!
    artist: String!
}

type User {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    songs: [Song!]
    queue: [QueueSong!]
}

type Song {
    id: ID!
    name: String!
    artist: String!
    requestedAmount: Int!
    createdAt: DateTime!
    updatedAt: DateTime!
    user: User!
}

type QueueSong {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    user: User!
    song: Song!
}

enum MutationType {
    CREATED
    UPDATED
    DELETED
}
